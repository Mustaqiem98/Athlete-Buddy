package com.example.lab5authenticationiqbal;


import android.app.DatePickerDialog;
import android.content.Intent;
import android.graphics.Color;
import android.graphics.drawable.ColorDrawable;
import android.net.Uri;
import android.os.Bundle;
import android.text.TextUtils;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.NotificationCompat;
import androidx.core.app.NotificationManagerCompat;

import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.OnSuccessListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.FirebaseApp;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.storage.FirebaseStorage;
import com.google.firebase.storage.OnProgressListener;
import com.google.firebase.storage.StorageReference;
import com.google.firebase.storage.UploadTask;

import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;

public class RegisterDetails extends AppCompatActivity {
    //Variables
    private static final int REQUEST_CODE_IMAGE = 101;
    EditText fullname, phone, birthdate, gender, sport, email, password;
    Button submitbtn;
    FirebaseDatabase Details;
    DatabaseReference DetailsReference;
    StorageReference StorageRef;
    FirebaseAuth mAuth;
    ImageView userPic;
    TextView textViewProgress;
    ProgressBar progressBar;

    Uri imageUri;
    boolean isImageAdded=false;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        FirebaseApp.initializeApp(this);

        DetailsReference = FirebaseDatabase.getInstance().getReference().child("Users");
        StorageRef = FirebaseStorage.getInstance().getReference().child("UsersPic");
        mAuth = FirebaseAuth.getInstance();
        setContentView(R.layout.activity_register_details);
        //Hooks to all xml elements in activity_sign_up.xml

        email = findViewById(R.id.email);
        password = findViewById(R.id.password);
        fullname = findViewById(R.id.editTextFullName);
        phone = findViewById(R.id.editTextPhone);
        birthdate = findViewById(R.id.editbirthdate);
        gender = findViewById(R.id.editTextGender);
        sport = findViewById(R.id.editTextSport);
        submitbtn = findViewById(R.id.buttonDetails);
        userPic = findViewById(R.id.userPic);
        textViewProgress = findViewById(R.id.textViewProgress);
        progressBar = findViewById(R.id.progressBar);

        textViewProgress.setVisibility(View.GONE);
        progressBar.setVisibility(View.GONE);

        userPic.setOnClickListener(new View.OnClickListener(){
            @Override
            public void onClick(View v)
            {
                Intent intent = new Intent();
                intent.setType("image/*");
                intent.setAction(Intent.ACTION_GET_CONTENT);
                startActivityForResult(intent,REQUEST_CODE_IMAGE);
            }
        });

        //Save data in FireBase on button click
        submitbtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {

                final String imageName= fullname.getText().toString();
                final String rphone = phone.getText().toString();
                final String rbirthdate = birthdate.getText().toString();
                final String rsport = sport.getText().toString();
                final  String rgender = gender.getText().toString();
                final String remail = email.getText().toString();
                final String rpassword = password.getText().toString();
                final String title = "Athlete Buddy Registeration ";
                final String Des= "Congratulations! You are one of us now!";
                //final String id = DetailsReference.push().getKey();

                if(email.getText().toString().equals("") && password.getText().toString().equals(""))
                {
                    Toast.makeText(getApplicationContext(),"Blank not allowed", Toast.LENGTH_SHORT).show();
                }else{

                    mAuth.createUserWithEmailAndPassword(remail,rpassword)
                            .addOnCompleteListener(new OnCompleteListener<AuthResult>() {
                                @Override
                                public void onComplete(@NonNull Task<AuthResult> task) {
                                    if(task.isSuccessful()){
                                        Toast.makeText(getApplicationContext(),"User created succesfully",Toast.LENGTH_SHORT).show();
                                        finish();
                                        Intent i = new Intent(getApplicationContext(),Home.class);
                                        startActivity(i);
                                    }else{
                                        Toast.makeText(getApplicationContext(),"User could not be found",Toast.LENGTH_SHORT).show();
                                    }
                                }
                            });

                }

                if (isImageAdded != false && imageName != null)
                {
                    uploadImage(imageName, rphone, rbirthdate, rsport, rgender, remail, rpassword);
                }

                //Get all the values




            }
        });//Register Button method end
    }//onCreate Method End

    private void uploadImage(final String rname,final String rphone,final String rbirthdate,final String rsport, final String rgender, final String remail, final String rpassword) {
        textViewProgress.setVisibility(View.VISIBLE);
        progressBar.setVisibility(View.VISIBLE);

        final String key = DetailsReference.push().getKey();
        StorageRef.child(key+".jpg").putFile(imageUri).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {
            @Override
            public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {
                StorageRef.child(key+".jpg").getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {
                    @Override
                    public void onSuccess(Uri uri) {
                        HashMap hashMap= new HashMap();
                        hashMap.put("Username",rname);
                        hashMap.put("ImageUrl",uri.toString());
                        hashMap.put("Email",remail);
                        hashMap.put("Password",rpassword);
                        hashMap.put("Sport",rsport);
                        hashMap.put("Phone",rphone);
                        hashMap.put("Birthdate",rbirthdate);
                        hashMap.put("Gender",rgender);





                        DetailsReference.child(key).setValue(hashMap).addOnSuccessListener(new OnSuccessListener<Void>() {
                            @Override
                            public void onSuccess(Void aVoid) {
                               // Toast.makeText(RegisterDetails.this, "Data Successfully Uploaded", Toast.LENGTH_LONG).show();

                            }
                        });
                    }
                });

            }
        }).addOnProgressListener(new OnProgressListener<UploadTask.TaskSnapshot>() {
            @Override
            public void onProgress(UploadTask.TaskSnapshot taskSnapshot) {
                double progress=(taskSnapshot.getBytesTransferred()*100)/taskSnapshot.getTotalByteCount();
                progressBar.setProgress((int)progress);
            }
        });
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if(requestCode==REQUEST_CODE_IMAGE && data!=null)
        {
            imageUri=data.getData();
            isImageAdded=true;
            userPic.setImageURI(imageUri);

        }
    }
}

